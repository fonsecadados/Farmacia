from nlp_processor import NLPProcessor
from context_manager import ContextManager
from models import Product, FAQ, Conversation

class ResponseGenerator:
    """Gerador de respostas para o bot de farm√°cia"""
    
    @staticmethod
    def generate_response(user_id, platform, message_text):
        """Gera uma resposta com base na mensagem do usu√°rio e no contexto"""
        # Salvar a mensagem do usu√°rio
        Conversation.save_message(user_id, platform, message_text, is_from_user=True)
        
        # Analisar o texto com NLP
        nlp_result = NLPProcessor.analyze_text(message_text)
        
        # Verificar se h√° um contexto ativo e processar a mensagem nesse contexto
        context_response = ContextManager.process_in_context(user_id, platform, message_text, nlp_result)
        
        if context_response and context_response[0]:
            response, new_context_type, new_context_data = context_response
            
            # Atualizar o contexto se necess√°rio
            if new_context_type:
                ContextManager.set_context(user_id, platform, new_context_type, new_context_data)
            elif new_context_type == ContextManager.CONTEXT_TYPES['NONE']:
                ContextManager.clear_context(user_id, platform)
            
            # Salvar a resposta do bot
            Conversation.save_message(user_id, platform, response, is_from_user=False)
            return response
        
        # Se n√£o houver contexto ativo ou o contexto n√£o gerou resposta,
        # processar a mensagem normalmente com base na inten√ß√£o
        intent = nlp_result['intent']
        entities = nlp_result['entities']
        
        # Gerar resposta com base na inten√ß√£o
        response = ResponseGenerator._generate_response_by_intent(intent, entities, user_id, platform)
        
        # Salvar a resposta do bot
        Conversation.save_message(user_id, platform, response, is_from_user=False)
        return response
    
    @staticmethod
    def _generate_response_by_intent(intent, entities, user_id, platform):
        """Gera uma resposta com base na inten√ß√£o identificada"""
        
        if intent == 'saudacao':
            return (
                "Ol√°! Bem-vindo √† Farm√°cia Virtual. Como posso ajudar voc√™ hoje? üòä\n\n"
                "Posso fornecer informa√ß√µes sobre medicamentos, verificar disponibilidade de produtos, "
                "informar hor√°rios de funcionamento e muito mais."
            )
        
        elif intent == 'despedida':
            return (
                "Obrigado por entrar em contato! Estamos sempre √† disposi√ß√£o para ajudar. "
                "Tenha um √≥timo dia! üëã"
            )
        
        elif intent == 'agradecimento':
            return (
                "Por nada! Estou aqui para ajudar. Precisa de mais alguma coisa?"
            )
        
        elif intent == 'info_medicamento':
            # Verificar se h√° medicamentos mencionados
            medicamentos = entities.get('medicamentos', [])
            if medicamentos:#
                medicine_name = medicamentos[0]
                
                # Definir contexto para continuar falando sobre este medicamento
                ContextManager.set_context(
                    user_id, 
                    platform, 
                    ContextManager.CONTEXT_TYPES['ASKING_MEDICINE_INFO'],
                    {'medicine_name': medicine_name}
                )
                
                return (
                    f"Voc√™ gostaria de informa√ß√µes sobre {medicine_name}. "
                    f"Estou buscando os detalhes para voc√™..."
                )
            else:
                return (
                    "Qual medicamento voc√™ gostaria de saber mais informa√ß√µes? "
                    "Por favor, informe o nome do medicamento."
                )
        
        elif intent == 'preco':
            # Verificar se h√° medicamentos mencionados
            medicamentos = entities.get('medicamentos', [])
            if medicamentos:
                medicine_name = medicamentos[0]
                
                # Aqui seria implementada a l√≥gica para buscar o pre√ßo
                # Por enquanto, apenas simulamos uma resposta
                return f"O pre√ßo atual de {medicine_name} √© R$ XX,XX. Posso ajudar com mais alguma informa√ß√£o?"
            else:
                return (
                    "Qual produto voc√™ gostaria de saber o pre√ßo? "
                    "Por favor, informe o nome do produto."
                )
        
        elif intent == 'disponibilidade':
            # Verificar se h√° medicamentos mencionados
            medicamentos = entities.get('medicamentos', [])
            if medicamentos:
                product_name = medicamentos[0]
                
                # Definir contexto para continuar falando sobre este produto
                ContextManager.set_context(
                    user_id, 
                    platform, 
                    ContextManager.CONTEXT_TYPES['CHECKING_STOCK'],
                    {'product_name': product_name}
                )
                
                return (
                    f"Voc√™ gostaria de verificar a disponibilidade de {product_name}. "
                    f"Estou consultando nosso estoque..."
                )
            else:
                return (
                    "Qual produto voc√™ gostaria de verificar a disponibilidade? "
                    "Por favor, informe o nome do produto."
                )
        
        elif intent == 'horario':
            return (
                "Nossa farm√°cia est√° aberta nos seguintes hor√°rios:\n\n"
                "Segunda a Sexta: 08:00 √†s 20:00\n"
                "S√°bados: 08:00 √†s 18:00\n"
                "Domingos e Feriados: 09:00 √†s 13:00\n\n"
                "Posso ajudar com mais alguma informa√ß√£o?"
            )
        
        elif intent == 'localizacao':
            return (
                "Nossa farm√°cia est√° localizada na Av. Principal, 123 - Centro. \n\n"
                "Refer√™ncia: Pr√≥ximo ao Banco do Brasil.\n\n"
                "Voc√™ pode nos encontrar facilmente pelo Google Maps pesquisando por 'Farm√°cia Virtual'."
            )
        
        elif intent == 'ajuda':
            return (
                "Posso ajudar voc√™ com:\n\n"
                "- Informa√ß√µes sobre medicamentos\n"
                "- Pre√ßos de produtos\n"
                "- Verifica√ß√£o de disponibilidade em estoque\n"
                "- Hor√°rios de funcionamento\n"
                "- Localiza√ß√£o da farm√°cia\n"
                "- Recomenda√ß√µes para sintomas\n\n"
                "Como posso te ajudar hoje?"
            )
        
        elif intent == 'falar_humano':
            return (
                "Entendo que voc√™ prefere falar com um atendente humano. "
                "Para isso, voc√™ pode ligar para nossa central de atendimento no n√∫mero (XX) XXXX-XXXX "
                "ou enviar um e-mail para atendimento@farmaciavirtual.com.br.\n\n"
                "Nosso hor√°rio de atendimento humano √© de segunda a sexta, das 8h √†s 18h."
            )
        
        else:  # intent == 'desconhecido' ou qualquer outro n√£o tratado
            # Verificar se h√° sintomas mencionados
            sintomas = entities.get('sintomas', [])
            if sintomas:
                symptom = sintomas[0]
                
                # Definir contexto para esperar mais detalhes sobre o sintoma
                ContextManager.set_context(
                    user_id, 
                    platform, 
                    ContextManager.CONTEXT_TYPES['WAITING_SYMPTOM'],
                    {'symptom': symptom}
                )
                
                return (
                    f"Entendi que voc√™ est√° com {symptom}. "
                    f"Pode me dar mais detalhes sobre esse sintoma? "
                    f"Por exemplo, h√° quanto tempo est√° sentindo, se h√° outros sintomas associados, etc."
                )
            
            # Resposta padr√£o para inten√ß√µes n√£o reconhecidas
            return (
                "Desculpe, n√£o entendi completamente sua solicita√ß√£o. "
                "Posso ajudar com informa√ß√µes sobre medicamentos, pre√ßos, disponibilidade, "
                "hor√°rios de funcionamento ou localiza√ß√£o da farm√°cia. "
                "Como posso te ajudar?"
            )

